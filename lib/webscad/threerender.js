// Generated by CoffeeScript 1.3.3
(function() {
  var ScadFaceToThreeFacesConverter, Three, ThreeGeometryBuilder, ThreeRenderer;

  if (typeof THREE !== "undefined" && THREE !== null) {
    Three = THREE;
  } else {
    Three = require('../Three_module').Three;
  }

  exports.ScadFaceToThreeFacesConverter = ScadFaceToThreeFacesConverter = (function() {

    function ScadFaceToThreeFacesConverter() {}

    /* Takes one of our faces (based on the half-edge data structure),
    and converts it to one or more THREE.Face3 objects.
    TODO: Use the THREE.Face4 class when possible.
    */


    ScadFaceToThreeFacesConverter.prototype.convert = function(scadFace) {
      return console.log(scadFace);
    };

    return ScadFaceToThreeFacesConverter;

  })();

  exports.ThreeGeometryBuilder = ThreeGeometryBuilder = (function() {

    function ThreeGeometryBuilder() {}

    ThreeGeometryBuilder.prototype.begin = function() {
      this.geometry = new Three.Geometry();
      return this.materials = [];
    };

    ThreeGeometryBuilder.prototype.end = function() {
      this.geometry.materials = this.materials;
      return this.geometry;
    };

    return ThreeGeometryBuilder;

  })();

  exports.ThreeRenderer = ThreeRenderer = (function() {

    function ThreeRenderer() {
      this.builder = new ThreeGeometryBuilder();
    }

    /* Takes a NefPolyhedron, and converts it into
    a Three.js polyhedron.
    */


    ThreeRenderer.prototype.render = function(nefPolyhedron) {};

    return ThreeRenderer;

  })();

}).call(this);
