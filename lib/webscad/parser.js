/* Jison generated parser */
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"Root":3,"Body":4,"Block":5,"TERMINATOR":6,"{":7,"}":8,"Statement":9,"Module":10,"ModuleInvocation":11,"Assign":12,"Code":13,"If":14,"Comment":15,"Expression":16,"Value":17,"Invocation":18,"Operation":19,"Conditional":20,"Identifier":21,"IDENTIFIER":22,"Assignable":23,"=":24,"COMMENT":25,"FUNCTION":26,"PARAM_START":27,"ParamList":28,"PARAM_END":29,"OptComma":30,",":31,"BasicValue":32,"IndexAccess":33,"MemberAccess":34,"NUMBER":35,"STRING":36,"BOOL":37,"Range":38,"Vector":39,"INDEX_START":40,"INDEX_END":41,".":42,"MODULE":43,"Arguments":44,"ModuleInvocations":45,"ModuleInvocationList":46,"CALL_START":47,"CALL_END":48,"ArgList":49,"[":50,"]":51,":":52,"Arg":53,"For":54,"ForBody":55,"FOR":56,"ForStart":57,"ForSource":58,"ForVariables":59,"OWN":60,"ForValue":61,"FORIN":62,"FOROF":63,"WHEN":64,"BY":65,"?":66,"IfBlock":67,"IF":68,"(":69,")":70,"ELSE":71,"UNARY":72,"-":73,"+":74,"MATH":75,"SHIFT":76,"COMPARE":77,"LOGIC":78,"RELATION":79,"$accept":0,"$end":1},
terminals_: {2:"error",6:"TERMINATOR",7:"{",8:"}",22:"IDENTIFIER",24:"=",25:"COMMENT",26:"FUNCTION",27:"PARAM_START",29:"PARAM_END",31:",",35:"NUMBER",36:"STRING",37:"BOOL",40:"INDEX_START",41:"INDEX_END",42:".",43:"MODULE",47:"CALL_START",48:"CALL_END",50:"[",51:"]",52:":",56:"FOR",60:"OWN",62:"FORIN",63:"FOROF",64:"WHEN",65:"BY",66:"?",68:"IF",69:"(",70:")",71:"ELSE",72:"UNARY",73:"-",74:"+",75:"MATH",76:"SHIFT",77:"COMPARE",78:"LOGIC",79:"RELATION"},
productions_: [0,[3,0],[3,1],[3,1],[3,2],[5,2],[5,3],[5,3],[5,4],[4,1],[4,3],[4,2],[9,1],[9,1],[9,1],[9,1],[9,1],[9,1],[16,1],[16,1],[16,1],[16,1],[21,1],[12,3],[15,1],[13,7],[30,0],[30,1],[28,0],[28,1],[28,3],[23,1],[23,2],[23,2],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1],[17,1],[17,2],[17,2],[33,3],[34,2],[10,6],[11,2],[11,3],[45,1],[45,3],[46,0],[46,1],[46,3],[46,2],[18,2],[44,2],[44,4],[39,2],[39,4],[38,5],[38,7],[49,1],[49,3],[49,4],[53,1],[53,1],[54,2],[54,2],[54,2],[55,2],[55,2],[57,2],[57,3],[61,1],[61,1],[59,1],[59,3],[58,2],[58,2],[58,4],[58,4],[58,4],[58,6],[58,6],[20,5],[67,5],[67,7],[14,1],[14,3],[19,2],[19,2],[19,2],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1:return this.$ = new yy.Block;
break;
case 2:return this.$ = $$[$0];
break;
case 3:return this.$ = $$[$0];
break;
case 4:return this.$ = $$[$0-1];
break;
case 5:this.$ = new yy.Block;
break;
case 6:this.$ = new yy.Block;
break;
case 7:this.$ = $$[$0-1];
break;
case 8:this.$ = $$[$0-1];
break;
case 9:this.$ = yy.Block.wrap([$$[$0]]);
break;
case 10:this.$ = $$[$0-2].push($$[$0]);
break;
case 11:this.$ = $$[$0-1];
break;
case 12:this.$ = $$[$0];
break;
case 13:this.$ = $$[$0];
break;
case 14:this.$ = $$[$0];
break;
case 15:this.$ = $$[$0];
break;
case 16:this.$ = $$[$0];
break;
case 17:this.$ = $$[$0];
break;
case 18:this.$ = $$[$0];
break;
case 19:this.$ = $$[$0];
break;
case 20:this.$ = $$[$0];
break;
case 21:this.$ = $$[$0];
break;
case 22:this.$ = new yy.Identifier($$[$0]);
break;
case 23:this.$ = new yy.Assign($$[$0-2], $$[$0]);
break;
case 24:this.$ = new yy.Comment($$[$0]);
break;
case 25:this.$ = new yy.Code($$[$0-5], $$[$0-3], $$[$0]);
break;
case 26:this.$ = $$[$0];
break;
case 27:this.$ = $$[$0];
break;
case 28:this.$ = [];
break;
case 29:this.$ = [$$[$0]];
break;
case 30:this.$ = $$[$0-2].concat($$[$0]);
break;
case 31:this.$ = $$[$0];
break;
case 32:this.$ = new yy.IndexAccess($$[$0-1], $$[$0]);
break;
case 33:this.$ = new yy.MemberAccess($$[$0-1], $$[$0]);
break;
case 34:this.$ = $$[$0];
break;
case 35:this.$ = new yy.NumberValue($$[$0]);
break;
case 36:this.$ = new yy.StringValue($$[$0]);
break;
case 37:this.$ = (function () {
        if ($$[$0] === 'undef') {
          return new yy.UndefinedValue;
        } else {
          return new yy.BooleanValue($$[$0]);
        }
      }());
break;
case 38:this.$ = $$[$0];
break;
case 39:this.$ = $$[$0];
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = new yy.IndexAccess($$[$0-1], $$[$0]);
break;
case 42:this.$ = new yy.MemberAccess($$[$0-1], $$[$0]);
break;
case 43:this.$ = $$[$0-1];
break;
case 44:this.$ = $$[$0];
break;
case 45:this.$ = new yy.Module($$[$0-4], $$[$0-2], $$[$0]);
break;
case 46:this.$ = new yy.ModuleCall($$[$0-1], $$[$0]);
break;
case 47:this.$ = new yy.ModuleCall($$[$0-2], $$[$0-1], $$[$0]);
break;
case 48:this.$ = [$$[$0]];
break;
case 49:this.$ = $$[$0-1];
break;
case 50:this.$ = [];
break;
case 51:this.$ = [$$[$0]];
break;
case 52:this.$ = $$[$0-2].concat($$[$0]);
break;
case 53:this.$ = $$[$0-1];
break;
case 54:this.$ = new yy.FunctionCall($$[$0-1], $$[$0]);
break;
case 55:this.$ = [];
break;
case 56:this.$ = $$[$0-2];
break;
case 57:this.$ = new yy.VectorValue([]);
break;
case 58:this.$ = new yy.VectorValue($$[$0-2]);
break;
case 59:this.$ = new yy.RangeValue($$[$0-3], new yy.NumberValue(1), $$[$0-1]);
break;
case 60:this.$ = new yy.RangeValue($$[$0-5], $$[$0-3], $$[$0-1]);
break;
case 61:this.$ = [$$[$0]];
break;
case 62:this.$ = $$[$0-2].concat($$[$0]);
break;
case 63:this.$ = $$[$0-3].concat($$[$0]);
break;
case 64:this.$ = $$[$0];
break;
case 65:this.$ = $$[$0];
break;
case 66:this.$ = new yy.For($$[$0-1], $$[$0]);
break;
case 67:this.$ = new yy.For($$[$0-1], $$[$0]);
break;
case 68:this.$ = new yy.For($$[$0], $$[$0-1]);
break;
case 69:this.$ = {
          source: new yy.Value($$[$0])
        };
break;
case 70:this.$ = (function () {
        $$[$0].own = $$[$0-1].own;
        $$[$0].name = $$[$0-1][0];
        $$[$0].index = $$[$0-1][1];
        return $$[$0];
      }());
break;
case 71:this.$ = $$[$0];
break;
case 72:this.$ = (function () {
        $$[$0].own = true;
        return $$[$0];
      }());
break;
case 73:this.$ = $$[$0];
break;
case 74:this.$ = new yy.Value($$[$0]);
break;
case 75:this.$ = [$$[$0]];
break;
case 76:this.$ = [$$[$0-2], $$[$0]];
break;
case 77:this.$ = {
          source: $$[$0]
        };
break;
case 78:this.$ = {
          source: $$[$0],
          object: true
        };
break;
case 79:this.$ = {
          source: $$[$0-2],
          guard: $$[$0]
        };
break;
case 80:this.$ = {
          source: $$[$0-2],
          guard: $$[$0],
          object: true
        };
break;
case 81:this.$ = {
          source: $$[$0-2],
          step: $$[$0]
        };
break;
case 82:this.$ = {
          source: $$[$0-4],
          guard: $$[$0-2],
          step: $$[$0]
        };
break;
case 83:this.$ = {
          source: $$[$0-4],
          step: $$[$0-2],
          guard: $$[$0]
        };
break;
case 84:this.$ = new yy.Conditional($$[$0-4], $$[$0-2], $$[$0]);
break;
case 85:this.$ = new yy.If($$[$0-2], $$[$0]);
break;
case 86:this.$ = $$[$0-6].addElse(new yy.If($$[$0-2], $$[$0]));
break;
case 87:this.$ = $$[$0];
break;
case 88:this.$ = $$[$0-2].addElse($$[$0]);
break;
case 89:this.$ = new yy.Op($$[$0-1], $$[$0]);
break;
case 90:this.$ = new yy.Op('-', $$[$0]);
break;
case 91:this.$ = new yy.Op('+', $$[$0]);
break;
case 92:this.$ = new yy.Op('+', $$[$0-2], $$[$0]);
break;
case 93:this.$ = new yy.Op('-', $$[$0-2], $$[$0]);
break;
case 94:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);
break;
case 95:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);
break;
case 96:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);
break;
case 97:this.$ = new yy.Op($$[$0-1], $$[$0-2], $$[$0]);
break;
case 98:this.$ = (function () {
        if ($$[$0-1].charAt(0) === '!') {
          return new yy.Op($$[$0-1].slice(1), $$[$0-2], $$[$0]).invert();
        } else {
          return new yy.Op($$[$0-1], $$[$0-2], $$[$0]);
        }
      }());
break;
}
},
table: [{1:[2,1],3:1,4:2,5:3,7:[1,5],9:4,10:6,11:7,12:8,13:9,14:10,15:11,21:13,22:[1,18],23:14,25:[1,17],26:[1,15],32:19,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,43:[1,12],50:[1,26],67:16,68:[1,20]},{1:[3]},{1:[2,2],6:[1,27]},{1:[2,3],6:[1,28]},{1:[2,9],6:[2,9],8:[2,9]},{4:31,6:[1,30],8:[1,29],9:4,10:6,11:7,12:8,13:9,14:10,15:11,21:13,22:[1,18],23:14,25:[1,17],26:[1,15],32:19,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,43:[1,12],50:[1,26],67:16,68:[1,20]},{1:[2,12],6:[2,12],8:[2,12]},{1:[2,13],6:[2,13],8:[2,13]},{1:[2,14],6:[2,14],8:[2,14]},{1:[2,15],6:[2,15],8:[2,15]},{1:[2,16],6:[2,16],8:[2,16]},{1:[2,17],6:[2,17],8:[2,17]},{21:32,22:[1,18]},{24:[2,31],40:[2,31],42:[2,31],44:33,47:[1,34]},{6:[2,34],24:[1,35],31:[2,34],40:[2,34],42:[2,34],48:[2,34],51:[2,34],52:[2,34],66:[2,34],73:[2,34],74:[2,34],75:[2,34],76:[2,34],77:[2,34],78:[2,34],79:[2,34]},{21:36,22:[1,18]},{1:[2,87],6:[2,87],8:[2,87],71:[1,37]},{1:[2,24],6:[2,24],8:[2,24]},{1:[2,22],6:[2,22],8:[2,22],24:[2,22],27:[2,22],29:[2,22],31:[2,22],40:[2,22],41:[2,22],42:[2,22],47:[2,22],48:[2,22],51:[2,22],52:[2,22],66:[2,22],70:[2,22],73:[2,22],74:[2,22],75:[2,22],76:[2,22],77:[2,22],78:[2,22],79:[2,22]},{33:38,34:39,40:[1,40],42:[1,41]},{69:[1,42]},{1:[2,35],6:[2,35],8:[2,35],31:[2,35],40:[2,35],41:[2,35],42:[2,35],48:[2,35],51:[2,35],52:[2,35],66:[2,35],70:[2,35],73:[2,35],74:[2,35],75:[2,35],76:[2,35],77:[2,35],78:[2,35],79:[2,35]},{1:[2,36],6:[2,36],8:[2,36],31:[2,36],40:[2,36],41:[2,36],42:[2,36],48:[2,36],51:[2,36],52:[2,36],66:[2,36],70:[2,36],73:[2,36],74:[2,36],75:[2,36],76:[2,36],77:[2,36],78:[2,36],79:[2,36]},{1:[2,37],6:[2,37],8:[2,37],31:[2,37],40:[2,37],41:[2,37],42:[2,37],48:[2,37],51:[2,37],52:[2,37],66:[2,37],70:[2,37],73:[2,37],74:[2,37],75:[2,37],76:[2,37],77:[2,37],78:[2,37],79:[2,37]},{1:[2,38],6:[2,38],8:[2,38],31:[2,38],40:[2,38],41:[2,38],42:[2,38],48:[2,38],51:[2,38],52:[2,38],66:[2,38],70:[2,38],73:[2,38],74:[2,38],75:[2,38],76:[2,38],77:[2,38],78:[2,38],79:[2,38]},{1:[2,39],6:[2,39],8:[2,39],31:[2,39],40:[2,39],41:[2,39],42:[2,39],48:[2,39],51:[2,39],52:[2,39],66:[2,39],70:[2,39],73:[2,39],74:[2,39],75:[2,39],76:[2,39],77:[2,39],78:[2,39],79:[2,39]},{12:56,16:43,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:14,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,49:45,50:[1,26],51:[1,44],53:50,72:[1,53],73:[1,54],74:[1,55]},{1:[2,11],6:[2,11],8:[2,11],9:57,10:6,11:7,12:8,13:9,14:10,15:11,21:13,22:[1,18],23:14,25:[1,17],26:[1,15],32:19,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,43:[1,12],50:[1,26],67:16,68:[1,20]},{1:[2,4]},{1:[2,5],6:[2,5],8:[2,5]},{4:59,8:[1,58],9:4,10:6,11:7,12:8,13:9,14:10,15:11,21:13,22:[1,18],23:14,25:[1,17],26:[1,15],32:19,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,43:[1,12],50:[1,26],67:16,68:[1,20]},{6:[1,27],8:[1,60]},{27:[1,61]},{1:[2,46],6:[2,46],7:[1,64],8:[2,46],11:63,21:65,22:[1,18],45:62,71:[2,46]},{12:56,16:68,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:14,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,48:[1,66],49:67,50:[1,26],53:50,72:[1,53],73:[1,54],74:[1,55]},{16:69,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{27:[1,71]},{7:[1,64],11:63,21:65,22:[1,18],45:72,68:[1,73]},{1:[2,32],6:[2,32],8:[2,32],24:[2,32],31:[2,32],40:[2,32],41:[2,32],42:[2,32],48:[2,32],51:[2,32],52:[2,32],66:[2,32],70:[2,32],73:[2,32],74:[2,32],75:[2,32],76:[2,32],77:[2,32],78:[2,32],79:[2,32]},{1:[2,33],6:[2,33],8:[2,33],24:[2,33],31:[2,33],40:[2,33],41:[2,33],42:[2,33],48:[2,33],51:[2,33],52:[2,33],66:[2,33],70:[2,33],73:[2,33],74:[2,33],75:[2,33],76:[2,33],77:[2,33],78:[2,33],79:[2,33]},{16:74,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{21:75,22:[1,18]},{16:76,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{6:[2,64],31:[2,64],51:[2,64],52:[1,77],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,57],6:[2,57],8:[2,57],31:[2,57],40:[2,57],41:[2,57],42:[2,57],48:[2,57],51:[2,57],52:[2,57],66:[2,57],70:[2,57],73:[2,57],74:[2,57],75:[2,57],76:[2,57],77:[2,57],78:[2,57],79:[2,57]},{6:[2,26],30:86,31:[1,87],51:[2,26]},{1:[2,18],6:[2,18],8:[2,18],31:[2,18],41:[2,18],48:[2,18],51:[2,18],52:[2,18],66:[2,18],70:[2,18],73:[2,18],74:[2,18],75:[2,18],76:[2,18],77:[2,18],78:[2,18],79:[2,18]},{1:[2,19],6:[2,19],8:[2,19],31:[2,19],33:88,34:89,40:[1,40],41:[2,19],42:[1,41],48:[2,19],51:[2,19],52:[2,19],66:[2,19],70:[2,19],73:[2,19],74:[2,19],75:[2,19],76:[2,19],77:[2,19],78:[2,19],79:[2,19]},{1:[2,20],6:[2,20],8:[2,20],31:[2,20],41:[2,20],48:[2,20],51:[2,20],52:[2,20],66:[2,20],70:[2,20],73:[2,20],74:[2,20],75:[2,20],76:[2,20],77:[2,20],78:[2,20],79:[2,20]},{1:[2,21],6:[2,21],8:[2,21],31:[2,21],41:[2,21],48:[2,21],51:[2,21],52:[2,21],66:[2,21],70:[2,21],73:[2,21],74:[2,21],75:[2,21],76:[2,21],77:[2,21],78:[2,21],79:[2,21]},{6:[2,61],31:[2,61],48:[2,61],51:[2,61]},{1:[2,40],6:[2,40],8:[2,40],31:[2,40],33:38,34:39,40:[1,40],41:[2,40],42:[1,41],48:[2,40],51:[2,40],52:[2,40],66:[2,40],70:[2,40],73:[2,40],74:[2,40],75:[2,40],76:[2,40],77:[2,40],78:[2,40],79:[2,40]},{1:[2,31],6:[2,31],8:[2,31],24:[2,31],31:[2,31],40:[2,31],41:[2,31],42:[2,31],44:90,47:[1,34],48:[2,31],51:[2,31],52:[2,31],66:[2,31],70:[2,31],73:[2,31],74:[2,31],75:[2,31],76:[2,31],77:[2,31],78:[2,31],79:[2,31]},{16:91,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:92,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:93,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{6:[2,65],31:[2,65],48:[2,65],51:[2,65]},{1:[2,10],6:[2,10],8:[2,10]},{1:[2,6],6:[2,6],8:[2,6]},{6:[1,27],8:[1,94]},{1:[2,7],6:[2,7],8:[2,7]},{21:96,22:[1,18],28:95,29:[2,28],31:[2,28]},{1:[2,47],6:[2,47],8:[2,47],71:[2,47]},{1:[2,48],6:[2,48],8:[2,48],71:[2,48]},{6:[2,50],8:[2,50],11:98,21:65,22:[1,18],46:97},{44:33,47:[1,34]},{1:[2,55],6:[2,55],7:[2,55],8:[2,55],22:[2,55],31:[2,55],40:[2,55],41:[2,55],42:[2,55],48:[2,55],51:[2,55],52:[2,55],66:[2,55],70:[2,55],71:[2,55],73:[2,55],74:[2,55],75:[2,55],76:[2,55],77:[2,55],78:[2,55],79:[2,55]},{6:[2,26],30:99,31:[1,87],48:[2,26]},{6:[2,64],31:[2,64],48:[2,64],51:[2,64],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,23],6:[2,23],8:[2,23],31:[2,23],48:[2,23],51:[2,23],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,34],6:[2,34],8:[2,34],31:[2,34],40:[2,34],41:[2,34],42:[2,34],48:[2,34],51:[2,34],52:[2,34],66:[2,34],70:[2,34],73:[2,34],74:[2,34],75:[2,34],76:[2,34],77:[2,34],78:[2,34],79:[2,34]},{21:96,22:[1,18],28:100,29:[2,28],31:[2,28]},{1:[2,88],6:[2,88],8:[2,88]},{69:[1,101]},{41:[1,102],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,44],6:[2,44],8:[2,44],24:[2,44],31:[2,44],40:[2,44],41:[2,44],42:[2,44],48:[2,44],51:[2,44],52:[2,44],66:[2,44],70:[2,44],73:[2,44],74:[2,44],75:[2,44],76:[2,44],77:[2,44],78:[2,44],79:[2,44]},{66:[1,85],70:[1,103],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{16:104,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:105,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:106,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:107,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:108,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:109,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:110,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:111,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:112,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{6:[1,114],51:[1,113]},{6:[2,27],12:56,16:68,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:14,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,48:[2,27],50:[1,26],51:[2,27],53:115,72:[1,53],73:[1,54],74:[1,55]},{1:[2,41],6:[2,41],8:[2,41],31:[2,41],41:[2,41],48:[2,41],51:[2,41],52:[2,41],66:[2,41],70:[2,41],73:[2,41],74:[2,41],75:[2,41],76:[2,41],77:[2,41],78:[2,41],79:[2,41]},{1:[2,42],6:[2,42],8:[2,42],31:[2,42],41:[2,42],48:[2,42],51:[2,42],52:[2,42],66:[2,42],70:[2,42],73:[2,42],74:[2,42],75:[2,42],76:[2,42],77:[2,42],78:[2,42],79:[2,42]},{1:[2,54],6:[2,54],8:[2,54],31:[2,54],40:[2,54],41:[2,54],42:[2,54],48:[2,54],51:[2,54],52:[2,54],66:[2,54],70:[2,54],73:[2,54],74:[2,54],75:[2,54],76:[2,54],77:[2,54],78:[2,54],79:[2,54]},{1:[2,89],6:[2,89],8:[2,89],31:[2,89],41:[2,89],48:[2,89],51:[2,89],52:[2,89],66:[2,89],70:[2,89],73:[2,89],74:[2,89],75:[2,89],76:[2,89],77:[2,89],78:[2,89],79:[2,89]},{1:[2,90],6:[2,90],8:[2,90],31:[2,90],41:[2,90],48:[2,90],51:[2,90],52:[2,90],66:[2,90],70:[2,90],73:[2,90],74:[2,90],75:[2,90],76:[2,90],77:[2,90],78:[2,90],79:[2,90]},{1:[2,91],6:[2,91],8:[2,91],31:[2,91],41:[2,91],48:[2,91],51:[2,91],52:[2,91],66:[2,91],70:[2,91],73:[2,91],74:[2,91],75:[2,91],76:[2,91],77:[2,91],78:[2,91],79:[2,91]},{1:[2,8],6:[2,8],8:[2,8]},{29:[1,116],31:[1,117]},{29:[2,29],31:[2,29]},{6:[1,119],8:[1,118]},{6:[2,51],8:[2,51]},{6:[1,114],48:[1,120]},{29:[1,121],31:[1,117]},{16:122,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{1:[2,43],6:[2,43],8:[2,43],24:[2,43],31:[2,43],40:[2,43],41:[2,43],42:[2,43],48:[2,43],51:[2,43],52:[2,43],66:[2,43],70:[2,43],73:[2,43],74:[2,43],75:[2,43],76:[2,43],77:[2,43],78:[2,43],79:[2,43]},{7:[1,64],11:63,21:65,22:[1,18],45:123},{51:[1,124],52:[1,125],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,92],6:[2,92],8:[2,92],31:[2,92],41:[2,92],48:[2,92],51:[2,92],52:[2,92],66:[2,92],70:[2,92],73:[2,92],74:[2,92],75:[1,80],76:[2,92],77:[2,92],78:[2,92],79:[2,92]},{1:[2,93],6:[2,93],8:[2,93],31:[2,93],41:[2,93],48:[2,93],51:[2,93],52:[2,93],66:[2,93],70:[2,93],73:[2,93],74:[2,93],75:[1,80],76:[2,93],77:[2,93],78:[2,93],79:[2,93]},{1:[2,94],6:[2,94],8:[2,94],31:[2,94],41:[2,94],48:[2,94],51:[2,94],52:[2,94],66:[2,94],70:[2,94],73:[2,94],74:[2,94],75:[2,94],76:[2,94],77:[2,94],78:[2,94],79:[2,94]},{1:[2,95],6:[2,95],8:[2,95],31:[2,95],41:[2,95],48:[2,95],51:[2,95],52:[2,95],66:[2,95],70:[2,95],73:[1,79],74:[1,78],75:[1,80],76:[2,95],77:[2,95],78:[2,95],79:[2,95]},{1:[2,96],6:[2,96],8:[2,96],31:[2,96],41:[2,96],48:[2,96],51:[2,96],52:[2,96],66:[2,96],70:[2,96],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[2,96],78:[2,96],79:[1,84]},{1:[2,97],6:[2,97],8:[2,97],31:[2,97],41:[2,97],48:[2,97],51:[2,97],52:[2,97],66:[2,97],70:[2,97],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[2,97],79:[1,84]},{1:[2,98],6:[2,98],8:[2,98],31:[2,98],41:[2,98],48:[2,98],51:[2,98],52:[2,98],66:[2,98],70:[2,98],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[2,98],78:[2,98],79:[2,98]},{52:[1,126],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,58],6:[2,58],8:[2,58],31:[2,58],40:[2,58],41:[2,58],42:[2,58],48:[2,58],51:[2,58],52:[2,58],66:[2,58],70:[2,58],73:[2,58],74:[2,58],75:[2,58],76:[2,58],77:[2,58],78:[2,58],79:[2,58]},{12:56,16:68,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:14,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],53:127,72:[1,53],73:[1,54],74:[1,55]},{6:[2,62],31:[2,62],48:[2,62],51:[2,62]},{5:128,7:[1,5]},{21:129,22:[1,18]},{1:[2,49],6:[2,49],8:[2,49],71:[2,49]},{6:[2,53],8:[2,53],11:130,21:65,22:[1,18]},{1:[2,56],6:[2,56],7:[2,56],8:[2,56],22:[2,56],31:[2,56],40:[2,56],41:[2,56],42:[2,56],48:[2,56],51:[2,56],52:[2,56],66:[2,56],70:[2,56],71:[2,56],73:[2,56],74:[2,56],75:[2,56],76:[2,56],77:[2,56],78:[2,56],79:[2,56]},{24:[1,131]},{66:[1,85],70:[1,132],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,85],6:[2,85],8:[2,85],71:[2,85]},{1:[2,59],6:[2,59],8:[2,59],31:[2,59],40:[2,59],41:[2,59],42:[2,59],48:[2,59],51:[2,59],52:[2,59],66:[2,59],70:[2,59],73:[2,59],74:[2,59],75:[2,59],76:[2,59],77:[2,59],78:[2,59],79:[2,59]},{16:133,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{16:134,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{6:[2,63],31:[2,63],48:[2,63],51:[2,63]},{1:[2,45],6:[2,45],8:[2,45]},{29:[2,30],31:[2,30]},{6:[2,52],8:[2,52]},{16:135,17:46,18:47,19:48,20:49,21:52,22:[1,18],23:70,32:51,35:[1,21],36:[1,22],37:[1,23],38:24,39:25,50:[1,26],72:[1,53],73:[1,54],74:[1,55]},{7:[1,64],11:63,21:65,22:[1,18],45:136},{51:[1,137],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,84],6:[2,84],8:[2,84],31:[2,84],41:[2,84],48:[2,84],51:[2,84],52:[2,84],66:[2,84],70:[2,84],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,25],6:[2,25],8:[2,25],66:[1,85],73:[1,79],74:[1,78],75:[1,80],76:[1,81],77:[1,82],78:[1,83],79:[1,84]},{1:[2,86],6:[2,86],8:[2,86],71:[2,86]},{1:[2,60],6:[2,60],8:[2,60],31:[2,60],40:[2,60],41:[2,60],42:[2,60],48:[2,60],51:[2,60],52:[2,60],66:[2,60],70:[2,60],73:[2,60],74:[2,60],75:[2,60],76:[2,60],77:[2,60],78:[2,60],79:[2,60]}],
defaultActions: {28:[2,4]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    };

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+'\nExpecting '+expected.join(', ');
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};
return parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    if (typeof process !== 'undefined') {
        var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), "utf8");
    } else {
        var cwd = require("file").path(require("file").cwd());
        var source = cwd.join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}